To integrate Excel-to-PDF conversion with images into your project code while keeping it minimal, here's the updated version of the excel_to_pdf_content_only function. This modification will handle both text and images in Excel files:

Updated Function: excel_to_pdf_with_images

import openpyxl
from fpdf import FPDF
from tempfile import NamedTemporaryFile

def excel_to_pdf_with_images(excel_file, output_pdf):
    workbook = openpyxl.load_workbook(excel_file, data_only=True)
    sheet = workbook.active

    pdf = FPDF()
    pdf.add_page()
    pdf.set_font("Arial", size=10)

    for row in sheet.iter_rows():
        row_text = []
        for cell in row:
            # Add cell text
            if cell.value:
                row_text.append(str(cell.value))

            # Check for images in the cell
            for image in sheet._images:
                if cell.coordinate == image.anchor._from.coord:
                    # Temporarily save the image
                    with NamedTemporaryFile(suffix=".png", delete=False) as temp_img:
                        image.image.save(temp_img.name)
                        pdf.image(temp_img.name, x=pdf.get_x(), y=pdf.get_y(), w=50)  # Adjust size
                        pdf.ln(50)  # Add space after the image

        # Add row text to the PDF
        if row_text:
            pdf.multi_cell(0, 10, " ".join(row_text))
        pdf.ln(5)  # Add space between rows

    # Save the PDF
    pdf.output(output_pdf)

Integration in Your Project

Replace the existing excel_to_pdf_content_only function with this updated excel_to_pdf_with_images function. The rest of your project will remain the same.

Steps for Integration:

1. Replace Function:

Update the function excel_to_pdf_content_only in your project with excel_to_pdf_with_images.



2. Streamlit Integration:

Your existing logic for handling uploaded files remains unchanged because the new function accepts the same input (excel_file, output_pdf).



3. Libraries:

Ensure openpyxl and fpdf are installed. Install them using:

pip install openpyxl fpdf



4. Temporary Images:

The NamedTemporaryFile ensures images are temporarily saved and automatically cleaned up.




Example Usage in Streamlit:

elif uploaded_file.type in ["application/vnd.ms-excel", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"]:
    excel_to_pdf_with_images(uploaded_file, str(pdf_file))

This modification ensures your project converts Excel files with both text and images to PDF seamlessly.

